definitions:
  auth.LoginRequest:
    properties:
      email:
        example: odyssey@example.com
        type: string
      password:
        example: Example123!
        type: string
    type: object
  auth.LoginResponse:
    properties:
      expires_at:
        example: "2024-05-30T09:00:00Z"
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        type: string
    type: object
  auth.UnauthorizedResponse:
    properties:
      error:
        example: incorrect Username or Password
        type: string
    type: object
  v1.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  v1.SignUpRequest:
    properties:
      email:
        example: user@example.com
        type: string
      name:
        example: John Doe
        type: string
      nickname:
        example: johndoe
        type: string
      password:
        example: password123
        minLength: 8
        type: string
    required:
    - email
    - name
    - nickname
    - password
    type: object
  v1.SignUpResponse:
    properties:
      user_id:
        example: 1
        type: integer
    type: object
info:
  contact: {}
paths:
  /api/v1/auth/sign-in:
    post:
      consumes:
      - application/json
      description: Responds with a JWT token and expiration time upon successful login
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/auth.UnauthorizedResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/auth.UnauthorizedResponse'
      summary: User Login
      tags:
      - auth
  /api/v1/users:
    post:
      consumes:
      - application/json
      description: User SignUp
      parameters:
      - description: SignUp Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1.SignUpResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: User SignUp
      tags:
      - users
swagger: "2.0"
